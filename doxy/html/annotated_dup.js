var annotated_dup =
[
    [ "cnpy", "namespacecnpy.html", "namespacecnpy" ],
    [ "fmt", "namespacefmt.html", "namespacefmt" ],
    [ "internal", "namespaceinternal.html", "namespaceinternal" ],
    [ "spdlog", "namespacespdlog.html", "namespacespdlog" ],
    [ "std", "namespacestd.html", "namespacestd" ],
    [ "wct", "namespacewct.html", null ],
    [ "WireCell", "namespace_wire_cell.html", "namespace_wire_cell" ],
    [ "WireCellApps", "namespace_wire_cell_apps.html", "namespace_wire_cell_apps" ],
    [ "WireCellTbb", "namespace_wire_cell_tbb.html", "namespace_wire_cell_tbb" ],
    [ "align_spec", "structalign__spec.html", "structalign__spec" ],
    [ "arg_formatter", "classarg__formatter.html", "classarg__formatter" ],
    [ "arg_join", "structarg__join.html", "structarg__join" ],
    [ "back_insert_range", "classback__insert__range.html", "classback__insert__range" ],
    [ "basic_cstring_view", "classbasic__cstring__view.html", "classbasic__cstring__view" ],
    [ "basic_format_arg", "classbasic__format__arg.html", "classbasic__format__arg" ],
    [ "basic_format_args", "classbasic__format__args.html", "classbasic__format__args" ],
    [ "basic_format_context", "classbasic__format__context.html", "classbasic__format__context" ],
    [ "basic_format_specs", "structbasic__format__specs.html", "structbasic__format__specs" ],
    [ "basic_memory_buffer", "classbasic__memory__buffer.html", "classbasic__memory__buffer" ],
    [ "basic_parse_context", "classbasic__parse__context.html", "classbasic__parse__context" ],
    [ "basic_printf_context", "classbasic__printf__context.html", "classbasic__printf__context" ],
    [ "basic_printf_context_t", "structbasic__printf__context__t.html", "structbasic__printf__context__t" ],
    [ "basic_string_view", "classbasic__string__view.html", "classbasic__string__view" ],
    [ "basic_writer", "classbasic__writer.html", "classbasic__writer" ],
    [ "buffer_context", "structbuffer__context.html", "structbuffer__context" ],
    [ "buffered_file", "classbuffered__file.html", "classbuffered__file" ],
    [ "channel_wire_collector_t", "structchannel__wire__collector__t.html", "structchannel__wire__collector__t" ],
    [ "char_t", "structchar__t.html", null ],
    [ "compile_string", "structcompile__string.html", null ],
    [ "convert_to_int", "structconvert__to__int.html", null ],
    [ "convert_to_int< T, Char, void >", "structconvert__to__int_3_01_t_00_01_char_00_01void_01_4.html", null ],
    [ "core_format_specs", "structcore__format__specs.html", "structcore__format__specs" ],
    [ "DecayTime", "struct_decay_time.html", "struct_decay_time" ],
    [ "dynamic_formatter", "classdynamic__formatter.html", "classdynamic__formatter" ],
    [ "ElectronsAdapter", "class_electrons_adapter.html", "class_electrons_adapter" ],
    [ "error_code", "classerror__code.html", "classerror__code" ],
    [ "file", "classfile.html", "classfile" ],
    [ "float_spec_handler", "structfloat__spec__handler.html", "structfloat__spec__handler" ],
    [ "format_arg_store", "classformat__arg__store.html", "classformat__arg__store" ],
    [ "format_args", "structformat__args.html", "structformat__args" ],
    [ "format_args_t", "structformat__args__t.html", "structformat__args__t" ],
    [ "format_context_t", "structformat__context__t.html", "structformat__context__t" ],
    [ "format_error", "classformat__error.html", "classformat__error" ],
    [ "format_handler", "structformat__handler.html", "structformat__handler" ],
    [ "format_int", "classformat__int.html", "classformat__int" ],
    [ "format_to_n_args", "structformat__to__n__args.html", "structformat__to__n__args" ],
    [ "format_to_n_context", "structformat__to__n__context.html", null ],
    [ "format_to_n_result", "structformat__to__n__result.html", "structformat__to__n__result" ],
    [ "formatter", "structformatter.html", "structformatter" ],
    [ "formatter< arg_join< It, Char >, Char >", "structformatter_3_01arg__join_3_01_it_00_01_char_01_4_00_01_char_01_4.html", "structformatter_3_01arg__join_3_01_it_00_01_char_01_4_00_01_char_01_4" ],
    [ "formatter< RangeT, Char, typename std::enable_if< fmt::is_range< RangeT >::value >::type >", "structformatter_3_01_range_t_00_01_char_00_01typename_01std_1_1enable__if_3_01fmt_1_1is__range_338ef07b6d6c7537efaa2c888f2ea4c8d.html", "structformatter_3_01_range_t_00_01_char_00_01typename_01std_1_1enable__if_3_01fmt_1_1is__range_338ef07b6d6c7537efaa2c888f2ea4c8d" ],
    [ "formatter< std::chrono::duration< Rep, Period >, Char >", "structformatter_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_00_01_char_01_4.html", "structformatter_3_01std_1_1chrono_1_1duration_3_01_rep_00_01_period_01_4_00_01_char_01_4" ],
    [ "formatter< std::tm, Char >", "structformatter_3_01std_1_1tm_00_01_char_01_4.html", "structformatter_3_01std_1_1tm_00_01_char_01_4" ],
    [ "formatter< T, Char, typename std::enable_if< internal::format_type< typename buffer_context< Char >::type, T >::value >::type >", "structformatter_3_01_t_00_01_char_00_01typename_01std_1_1enable__if_3_01internal_1_1format__typeef2b7d59b5441fbead72290e06693dea.html", "structformatter_3_01_t_00_01_char_00_01typename_01std_1_1enable__if_3_01internal_1_1format__typeef2b7d59b5441fbead72290e06693dea" ],
    [ "formatter< T, Char, typename std::enable_if< internal::is_streamable< T, Char >::value &&!internal::format_type< typename buffer_context< Char >::type, T >::value >::type >", "structformatter_3_01_t_00_01_char_00_01typename_01std_1_1enable__if_3_01internal_1_1is__streamabdfe791f5d6e0a8acd43f884d0761b8af.html", "structformatter_3_01_t_00_01_char_00_01typename_01std_1_1enable__if_3_01internal_1_1is__streamabdfe791f5d6e0a8acd43f884d0761b8af" ],
    [ "formatter< TupleT, Char, typename std::enable_if< fmt::is_tuple_like< TupleT >::value >::type >", "structformatter_3_01_tuple_t_00_01_char_00_01typename_01std_1_1enable__if_3_01fmt_1_1is__tuple__a8a88f793f5f612c28a21643fc88182d.html", "structformatter_3_01_tuple_t_00_01_char_00_01typename_01std_1_1enable__if_3_01fmt_1_1is__tuple__a8a88f793f5f612c28a21643fc88182d" ],
    [ "formatting_base", "structformatting__base.html", "structformatting__base" ],
    [ "formatting_range", "structformatting__range.html", "structformatting__range" ],
    [ "formatting_tuple", "structformatting__tuple.html", "structformatting__tuple" ],
    [ "is_compile_string", "structis__compile__string.html", null ],
    [ "is_constructible", "structis__constructible.html", null ],
    [ "is_contiguous", "structis__contiguous.html", null ],
    [ "is_contiguous< internal::basic_buffer< Char > >", "structis__contiguous_3_01internal_1_1basic__buffer_3_01_char_01_4_01_4.html", null ],
    [ "is_contiguous< std::basic_string< Char > >", "structis__contiguous_3_01std_1_1basic__string_3_01_char_01_4_01_4.html", null ],
    [ "is_range", "structis__range.html", null ],
    [ "is_tuple_like", "structis__tuple__like.html", null ],
    [ "monostate", "structmonostate.html", null ],
    [ "NoiseAdderProc", "class_noise_adder_proc.html", "class_noise_adder_proc" ],
    [ "output_range", "classoutput__range.html", "classoutput__range" ],
    [ "Pdf", "struct_pdf.html", "struct_pdf" ],
    [ "PointAdapter", "class_point_adapter.html", "class_point_adapter" ],
    [ "printf_arg_formatter", "classprintf__arg__formatter.html", "classprintf__arg__formatter" ],
    [ "printf_formatter", "structprintf__formatter.html", "structprintf__formatter" ],
    [ "RandomT", "class_random_t.html", "class_random_t" ],
    [ "ReturnBool", "struct_return_bool.html", "struct_return_bool" ],
    [ "ReturnValue", "struct_return_value.html", "struct_return_value" ],
    [ "rgb", "structrgb.html", "structrgb" ],
    [ "SortByIndex", "struct_sort_by_index.html", "struct_sort_by_index" ],
    [ "StepAdapter", "class_step_adapter.html", "class_step_adapter" ],
    [ "system_error", "classsystem__error.html", "classsystem__error" ],
    [ "text_style", "classtext__style.html", "classtext__style" ],
    [ "u8string_view", "classu8string__view.html", "classu8string__view" ],
    [ "UniformBox", "struct_uniform_box.html", "struct_uniform_box" ],
    [ "wformat_args", "structwformat__args.html", "structwformat__args" ],
    [ "Wirebounds", "struct_wirebounds.html", "struct_wirebounds" ],
    [ "WirePlaneCache", "struct_wire_plane_cache.html", "struct_wire_plane_cache" ]
];